// api/get-gpt-data.js
export default async function handler(req, res) {
  const { brand, model } = req.query;

  const prompt = `–¢–∏ –∞—Å–∏—Å—Ç–µ–Ω—Ç, —â–æ –∑–∞–ø–æ–≤–Ω—é—î —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥—É—Ö–æ–≤–æ–∫. –î–ª—è –º–æ–¥–µ–ª—ñ ${brand} ${model} –∑–Ω–∞–π–¥–∏ —Ç—ñ–ª—å–∫–∏ —Ç—ñ –∞—Ç—Ä–∏–±—É—Ç–∏, —è–∫—ñ –≤—Ö–æ–¥—è—Ç—å —É —Å–ø–∏—Å–æ–∫. –Ø–∫—â–æ —è–∫–µ—Å—å –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö ‚Äî –≤–∏–≤–æ–¥—å –π–æ–≥–æ, –∞–ª–µ –≤—ñ–¥–º—ñ—á–∞–π —è–∫ –Ω–æ–≤–µ. –§–æ—Ä–º–∞—Ç: "–ê—Ç—Ä–∏–±—É—Ç: –ó–Ω–∞—á–µ–Ω–Ω—è".`;

  const result = await fetch("https://api.openai.com/v1/chat/completions", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${process.env.OPENAI_API_KEY}` // üîê –ë–µ—Ä–µ –∫–ª—é—á –∑ Vercel
    },
    body: JSON.stringify({
      model: "gpt-4o",
      messages: [{ role: "system", content: prompt }]
    })
  });

  const data = await result.json();
  const content = data?.choices?.[0]?.message?.content || "";

  res.status(200).json({ content });
}